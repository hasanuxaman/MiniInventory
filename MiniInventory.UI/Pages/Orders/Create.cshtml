@page
@model MiniInventory.UI.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create Order";
}

<h2>Create New Order</h2>

<form method="post">
    <div class="mb-3">
        <label class="form-label">Customer</label>
        <select asp-for="Order.CustomerId" class="form-control">
            <option value="">-- Select Customer --</option>
            @foreach (var customer in Model.Customers)
            {
                <option value="@customer.CustomerId">@customer.CustomerName</option>
            }
        </select>
    </div>

    <div class="mb-3">
        <label class="form-label">Order Date</label>
        <input asp-for="Order.OrderDate" type="date" class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Status</label>
        <input asp-for="Order.Status" class="form-control" />
    </div>

    <h4>Order Items</h4>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Unit Price</th>
                <th><button type="button" class="btn btn-sm btn-primary" onclick="addRow()">Add</button></th>
            </tr>
        </thead>
        <tbody id="detailsTable">
            @for (int i = 0; i < Model.Order.OrderDetails.Count; i++)
            {
                <tr>
                    <td>
                        <select name="Order.OrderDetails[@i].ProductId" class="form-control">
                            <option value="">-- Select Product --</option>
                            @foreach (var product in Model.Products)
                            {
                                <option value="@product.Id">@product.Name</option>
                            }
                        </select>
                    </td>
                    <td><input name="Order.OrderDetails[@i].Quantity" class="form-control" /></td>
                    <td><input name="Order.OrderDetails[@i].UnitPrice" class="form-control" /></td>
                    <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                </tr>
            }
        </tbody>
    </table>

    <button type="submit" class="btn btn-success">Create Order</button>
</form>

@section Scripts {
    <script>
        
        const products = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Products));

        function addRow() {
            const table = document.getElementById("detailsTable");
            const rowCount = table.rows.length;
            const row = table.insertRow();

            let options = '<option value="">-- Select Product --</option>';
            for (const p of products) {
                options += `<option value='${p.Id}'>${p.Name}</option>`;
            }

            row.innerHTML = `
                    <td>
                        <select name="Order.OrderDetails[${rowCount}].ProductId" class="form-control">
                            ${options}
                        </select>
                    </td>
                    <td><input name="Order.OrderDetails[${rowCount}].Quantity" class="form-control" /></td>
                    <td><input name="Order.OrderDetails[${rowCount}].UnitPrice" class="form-control" /></td>
                    <td><button type="button" class="btn btn-sm btn-danger" onclick="removeRow(this)">Remove</button></td>
                `;
        }

        function removeRow(button) {
            const row = button.closest("tr");
            row.remove();
        }
    </script>
}
